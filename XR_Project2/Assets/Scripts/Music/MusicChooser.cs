using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MusicChooser : MonoBehaviour
{
    public AudioClip[] AllMusics;
    public float[] musicSpeed;
    public AudioSource musicPlayer;
    public ButtonManager buttonManager;
    public ButtonPool buttonPool;
    public bool randomChoose;

    private bool _chooseFinish;
    private int last_index;

    public bool checkFinish
    {
        get
        {
            return _chooseFinish;
        }
        set
        {
            _chooseFinish = value;
        }
    }

    public List<float[]> musicSteps = new List<float[]>()
    {
        new float[] { 5.098662f, 5.375987f, 5.717324f, 6.015986f, 6.293311f, 6.570658f, 6.86932f, 7.167982f, 7.466644f, 7.765329f, 8.042653f, 8.341315f, 8.639977f, 8.917324f, 9.215986f, 9.514648f, 9.791995f, 10.04798f, 10.36798f, 10.66664f, 10.96533f, 11.26399f, 11.56265f, 11.81866f, 12.13866f, 12.41599f, 12.71465f, 13.01331f, 13.29066f, 13.56798f, 13.90932f, 14.18664f, 14.82664f, 15.10399f, 15.40265f, 15.67998f, 15.93599f, 16.23465f, 16.49066f, 17.13066f, 18.30399f, 18.58132f, 18.90132f, 19.43465f, 20.032f, 20.60798f, 20.88533f, 21.18399f, 21.71733f, 22.01599f, 22.35732f, 22.93331f, 24.40533f, 24.68265f, 24.98132f, 25.23732f, 25.57866f, 26.04798f, 26.55998f, 27.64798f, 27.92533f, 28.24533f, 28.52265f, 28.94932f, 29.37599f, 30.01599f, 30.29331f, 30.592f, 31.14664f, 31.38132f, 31.67998f, 32.34132f, 32.74664f, 33.06664f, 33.38664f, 33.68533f, 33.94131f, 34.28265f, 34.55998f, 35.13599f, 35.39199f, 35.71199f, 36.05331f, 36.33066f, 36.62932f, 36.92798f, 37.54664f, 37.80265f, 38.07998f, 38.37866f, 38.65599f, 38.97599f, 39.27465f, 39.85066f, 40.36265f, 40.66132f, 41.00265f, 41.62132f, 42.19732f, 42.45331f, 42.73066f, 43.02932f, 43.30664f, 43.62664f, 43.92533f, 44.50132f, 44.79998f, 45.05598f, 45.35465f, 45.67465f, 45.952f, 46.22932f, 46.50665f, 46.80533f, 47.31733f, 47.65866f, 47.93599f, 48.25599f, 48.55465f, 48.832f, 49.152f, 49.74932f, 50.02665f, 50.34665f, 50.92265f, 51.56265f, 52.11732f, 52.37331f, 52.60798f, 52.92798f, 53.24798f, 53.86665f, 54.42131f, 54.69866f, 54.97599f, 55.27465f, 55.61599f, 56.19199f, 56.44798f, 56.70399f, 57.04533f, 57.30132f, 57.62132f, 57.91998f, 58.38932f, 58.98664f, 59.34932f, 59.69066f, 60.26664f, 60.84265f, 61.11998f, 61.43998f, 61.73866f, 62.01599f, 62.33599f, 62.63465f, 63.14664f, 63.70132f, 63.99998f, 64.29866f, 64.59732f, 64.89599f, 65.49331f, 65.77066f, 66.04798f, 66.36798f, 66.66664f, 66.92265f, 67.22131f, 67.54131f, 67.81866f, 68.43732f, 69.86665f, 70.14399f, 70.61331f, 70.97598f, 71.27465f, 71.59465f, 71.89331f, 72.51199f, 73.02399f, 73.30132f, 73.59998f, 73.89866f, 74.19733f, 74.85867f, 75.13599f, 75.41331f, 75.66932f, 75.92533f, 76.24533f, 76.52265f, 77.14131f, 77.65331f, 77.97331f, 78.29331f, 78.93331f, 79.42399f, 79.70132f, 80.02132f, 80.31998f, 80.59732f, 80.89599f, 81.17331f, 81.81331f, 82.34664f, 82.62399f, 82.90131f, 83.19997f, 83.51997f, 84.15998f, 84.41599f, 84.73598f, 85.01331f, 85.26932f, 85.61066f, 85.86665f, 86.16533f, 86.48533f, 87.63732f, 88.25599f, 88.76798f, 89.40798f, 91.34932f, 92.50131f, 93.69598f, 94.82664f, 95.97866f, 97.30132f },
        new float[] { 5.525329f, 7.274649f, 9.002653f, 10.77331f, 12.47998f, 13.37599f, 14.29331f, 15.21066f, 16.04265f, 16.89599f, 17.83465f, 18.68798f, 19.58399f, 20.43732f, 21.31199f, 22.20798f, 23.10399f, 23.93599f, 24.87465f, 25.74932f, 26.60265f, 27.43465f, 28.30932f, 35.43465f, 36.28798f, 37.07732f, 38.01599f, 38.48533f, 38.95465f, 39.76533f, 40.61866f, 41.59998f, 42.00533f, 42.55998f, 43.39199f, 44.18132f, 45.07732f, 45.952f, 46.82664f, 47.72265f, 48.63998f, 49.06664f, 49.25866f, 49.53599f, 49.96265f, 50.41066f, 51.09331f, 52.11732f, 52.52265f, 53.01331f, 53.90932f, 54.63465f, 55.65866f, 56.06399f, 56.53331f, 57.42932f, 58.112f, 59.17866f, 60.03199f, 60.45866f, 60.69331f, 60.94932f, 61.16265f, 61.67465f, 63.08265f, 63.29599f, 63.55199f, 64.38399f, 65.08798f, 65.62132f, 66.60265f, 66.83733f, 67.072f, 67.90399f, 68.71465f, 69.16265f, 70.12265f, 70.35732f, 70.63465f, 71.44533f, 72.14932f, 72.70399f, 73.68533f, 73.87733f, 74.15465f, 74.98664f, 75.86131f, 76.60798f, 79.42399f, 80.23465f, 80.89599f, 81.40798f, 81.96265f, 82.38932f, 82.87997f, 83.81866f, 84.52265f, 85.03465f, 85.50399f, 85.952f, 86.46399f, 87.29599f, 88.12798f, 89.06664f, 89.89866f, 90.34664f, 90.58131f, 90.85867f, 91.072f, 91.66932f, 92.992f, 93.18399f, 93.50399f, 94.33598f, 95.06132f, 95.57331f, 96.04266f, 96.44798f, 96.95998f, 97.89866f, 98.64533f, 99.11465f, 99.56265f, 99.96798f, 100.5227f, 101.3546f, 102.1653f, 103.104f, 104f, 104.8533f, 105.7493f, 106.624f, 107.4987f, 107.9466f, 108.736f, 109.5893f, 110.1013f, 111.0613f, 111.9146f, 113.1733f, 113.6427f, 114.56f, 115.4346f, 116.3733f, 117.248f, 118.0587f, 118.912f, 119.8507f, 120.576f },
        new float[] { 5.525329f, 7.487982f, 9.621315f, 11.94664f, 14.10132f, 16.21331f, 18.38932f, 19.37066f, 20.50132f, 21.58932f, 22.69866f, 23.70131f, 24.87465f, 25.91998f, 26.53866f, 26.83732f, 27.11465f, 27.64798f, 28.13866f, 28.69331f, 29.22664f, 29.54664f, 29.82399f, 30.07998f, 30.35732f, 30.89066f, 31.44533f, 31.97866f, 32.46932f, 33.06664f, 33.62132f, 33.96265f, 34.68798f, 35.28533f, 35.54132f, 35.83998f, 36.37331f, 36.86399f, 37.41866f, 37.97331f, 38.272f, 38.54932f, 39.03998f, 39.57331f, 39.87199f, 40.14932f, 40.63998f, 41.21599f, 41.77066f, 42.09066f, 43.19998f, 44.15998f, 44.35199f, 44.992f, 45.56798f, 46.10131f, 46.63465f, 46.93331f, 47.18932f, 47.72265f, 48.38399f, 48.66132f, 49.00265f, 49.472f, 49.98399f, 50.62399f, 51.22131f, 56.02132f, 57.08798f, 58.13331f, 59.22131f, 60.30932f, 61.39732f, 62.48533f, 63.53066f, 64.68266f, 65.74932f, 66.83733f, 67.92533f, 69.03465f, 70.10132f, 71.03998f, 72.12798f, 73.36533f, 74.47465f, 75.02932f, 75.32798f, 75.60533f, 76.09599f, 76.672f, 76.992f, 77.26932f, 77.78132f, 78.33598f, 78.84798f, 79.14664f, 80.29866f, 80.89599f, 81.32265f, 81.59998f, 82.17599f, 82.70932f, 83.22131f, 83.75465f, 84.05331f, 84.33066f, 84.90665f, 85.43998f, 85.78132f, 86.01598f, 86.54932f, 87.06132f, 87.74399f, 88.23465f, 92.58665f, 93.61066f, 94.67732f, 95.78664f, 96.89599f, 98.00533f, 98.53867f, 98.83733f, 99.75465f, 99.98932f, 100.8213f, 101.0346f, 101.6747f, 102.2293f, 102.8266f, 103.36f, 103.6373f, 103.9146f, 104.448f, 105.0027f, 105.3013f, 105.6f, 106.1546f, 106.688f, 107.2f, 107.8613f, 118.784f, 120.9813f, 123.8613f, 125.568f, 127.744f, 129.664f, 130.816f, 131.8187f, 132.8213f, 133.9946f, 135.104f, 136f, 137.1093f, 138.3893f, 139.4346f, 140.544f, 141.056f, 141.6107f, 142.1866f, 142.464f, 142.72f, 143.2746f, 143.8933f, 144.4267f, 144.9813f, 149.1413f, 150.8907f, 151.6587f, 152.2346f, },
        new float[] { 4.970658f, 5.333311f, 5.738662f, 6.143991f, 6.591995f, 6.975986f, 7.423991f, 7.850657f, 8.298662f, 8.703991f, 9.10932f, 9.514648f, 9.962653f, 10.36798f, 10.81599f, 11.26399f, 11.712f, 12.13866f, 12.56533f, 12.992f, 13.39732f, 13.82399f, 14.25066f, 15.16798f, 15.99998f, 16.87465f, 17.70664f, 18.60265f, 19.41331f, 20.28798f, 21.11998f, 21.99465f, 22.84798f, 23.74399f, 24.57599f, 25.45066f, 26.28265f, 27.13599f, 27.92533f, 28.84265f, 29.67465f, 30.07998f, 30.57066f, 30.97599f, 31.40265f, 31.82932f, 32.31998f, 32.70399f, 33.17331f, 34.00533f, 34.85866f, 35.75465f, 36.58664f, 37.03465f, 37.50399f, 37.88798f, 38.39998f, 38.78399f, 39.18932f, 39.65866f, 40.06399f, 40.46932f, 40.89598f, 41.32265f, 41.70664f, 42.15465f, 42.58131f, 43.00798f, 43.45599f, 43.86132f, 44.26664f, 44.672f, 45.11998f, 46.01599f, 46.89066f, 47.70132f, 48.59732f, 49.40798f, 50.28265f, 50.70932f, 51.15733f, 51.54132f, 52.41599f, 53.33331f, 53.75998f, 54.10131f, 54.37866f, 55.42399f, 56.34132f, 57.17331f, 57.51465f, 57.89866f, 58.85866f, 59.71199f, 60.58664f, 61.05598f, 61.48265f, 61.86665f, 62.33599f, 63.21066f, 64.02132f, 64.89599f, 65.70664f, 66.17599f, 66.60265f, 66.81599f, 67.05066f, 67.26399f, 67.45599f, 67.77599f, 68.15998f, 69.11998f, 69.58932f, 69.99465f, 70.16533f, 70.42132f, 70.63465f, 70.89066f, 71.25331f, 71.65866f, 72.57599f, 73.00266f, 73.45066f, 73.66399f, 73.87733f, 74.09066f, 74.32533f, 74.53867f, 74.77331f, 74.98664f, 75.24265f, 75.47733f, 75.69066f, 75.90399f, 76.13866f, 76.77866f, 77.73866f, 78.65598f, 79.46664f, 80.34132f, 81.17331f, 82.00533f, 82.45331f, 82.85867f, 83.712f, 84.58665f, 85.46132f, 85.88799f, 86.29331f, 87.14664f, 87.99998f, 88.89599f, 89.32265f, 89.79199f, 90.62399f, 91.45599f, 92.33066f, 92.73598f, 93.18399f, 96.57599f, 100.0533f, 103.4666f, 104.2987f, 105.1733f, 106.0266f, 106.8587f, 107.7546f, 108.5653f, 109.0133f, 109.4827f, 109.888f, 110.3147f, 110.784f, 111.168f, 111.616f, 112.0213f, 112.4693f, 112.896f, 113.3013f, 113.7707f, 114.2187f, 114.624f, 115.072f, 115.4987f, 115.9253f, 116.3093f, 116.736f, 117.184f, 117.5893f, 118.0373f, 118.4426f, 118.912f, 119.296f, 119.7653f, 120.192f, }
    };

    void Awake()
    {
        for (int i = 0; i < musicSteps[0].Length; ++i)
        {
            musicSteps[0][i] += 0.15f; 
        }
        last_index = -1;
        //if (randomChoose)
        //{
        //    RandomChooseMusic();
        //}
    }

    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }

    public void RandomChooseMusic()
    {
        int index;
        do
        {
            for (int i = 0; i < 10; ++i)
            {
                index = Random.Range(0, AllMusics.Length);
            }
            index = Random.Range(0, AllMusics.Length);

        } while (index == last_index);
        last_index = index;
        musicPlayer.clip = AllMusics[index];
        buttonPool.SetSpeed(musicSpeed[index]);
        buttonManager.SetSpeed(musicSpeed[index]);
        buttonManager.SetMainStep(musicSteps[index]);
        _chooseFinish = true;
    }

}
